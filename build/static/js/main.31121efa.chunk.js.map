{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactFrom/ContactForm.module.css","Components/ContactFrom/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","getContactData","event","currentTarget","value","setState","handleSubmit","preventDefault","newContact","id","shortid","generate","console","log","props","onSubmit","resetForm","className","styles","container","this","formContainer","formLabel","type","onChange","inputForm","formBtn","Component","ContactList","contacts","removeContact","filter","contactList","contactItem","toLowerCase","includes","map","contactListItem","contactData","onClick","removeButton","Filter","filterHandler","inputValue","filterContainer","App","checkContactName","some","contact","addContact","alert","newContactData","concat","prevState","deleteContact","filterByName","prevProps","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,UAAY,0BAA0B,UAAY,4B,uCCAtHD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,cAAgB,mCAAmC,UAAY,+BAA+B,UAAY,+BAA+B,QAAU,+B,oMCoEjMC,E,4MA/DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,eAAiB,SAAAC,GAAU,IAAD,EACAA,EAAMC,cAAtBJ,EADgB,EAChBA,KAAMK,EADU,EACVA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,iBADgB,MAGG,EAAKT,MAAtBC,EAHc,EAGdA,KAAMC,EAHQ,EAGRA,OAERQ,EAAa,CAAEC,GADHC,IAAQC,WACUZ,OAAMC,UAE1CY,QAAQC,IAAIL,EAAWT,MAEvB,EAAKe,MAAMC,SAASP,GAEpB,EAAKQ,a,EAGPA,UAAY,WACV,EAAKX,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,qBAAKiB,UAAWC,IAAOC,UAAvB,SACE,uBAAMJ,SAAUK,KAAKd,aAAcW,UAAWC,IAAOG,cAArD,UACE,wBAAOJ,UAAWC,IAAOI,UAAzB,iBAEE,uBACEC,KAAK,OACLxB,KAAK,OACLK,MAAOgB,KAAKtB,MAAMC,KAClByB,SAAUJ,KAAKnB,eACfgB,UAAWC,IAAOO,eAGtB,wBAAOR,UAAWC,IAAOI,UAAzB,yBAEE,uBACEC,KAAK,OACLxB,KAAK,SACLK,MAAOgB,KAAKtB,MAAME,OAClBwB,SAAUJ,KAAKnB,eACfgB,UAAWC,IAAOO,eAGtB,wBAAQR,UAAWC,IAAOQ,QAA1B,0C,GArDgBC,a,gBCoCXC,EArCK,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,OAC9C,OACE,mCACE,oBAAId,UAAWC,IAAOc,YAAtB,SACGH,EACEE,QAAO,SAAAE,GAAW,OACjBA,EAAYlC,KAAKmC,cAAcC,SAASJ,EAAOG,kBAEhDE,KAAI,gBAAG3B,EAAH,EAAGA,GAAIV,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACH,qBAAaiB,UAAWC,IAAOmB,gBAA/B,UACE,oBAAGpB,UAAWC,IAAOoB,YAArB,UACGvC,EADH,KACWC,KAEX,wBACEuC,QAAS,kBAAMT,EAAcrB,IAC7BQ,UAAWC,IAAOsB,aAFpB,iBAJO/B,W,iBCaNgC,EAtBA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAC/B,OACE,qBAAK1B,UAAWC,IAAO0B,gBAAvB,SACE,wBAAO3B,UAAWC,IAAOI,UAAzB,2BAEE,uBACEC,KAAK,OACLxB,KAAK,SACLK,MAAOuC,EACPnB,SAAUkB,EACVzB,UAAWC,IAAOO,kBCyEboB,E,4MA/Eb/C,MAAQ,CACN+B,SAAU,CACR,CAAEpB,GAAI,OAAQV,KAAM,gBAAiBC,OAAQ,aAC7C,CAAES,GAAI,OAAQV,KAAM,iBAAkBC,OAAQ,aAC9C,CAAES,GAAI,OAAQV,KAAM,gBAAiBC,OAAQ,aAC7C,CAAES,GAAI,OAAQV,KAAM,iBAAkBC,OAAQ,cAEhD+B,OAAQ,I,EAGVe,iBAAmB,SAAA/C,GACjB,OAAO,EAAKD,MAAM+B,SAASkB,MACzB,SAAAC,GAAO,OAAIA,EAAQjD,KAAKmC,gBAAkBnC,EAAKmC,kB,EAInDe,WAAa,SAAAzC,GAAe,IAClBqB,EAAa,EAAK/B,MAAlB+B,SAER,GAAI,EAAKiB,iBAAiBtC,EAAWT,MACnCmD,MAAM,kCADR,CAIE,IAAMC,EAAiBtB,EAASuB,OAAO5C,GACvC,EAAKH,UAAS,SAAAgD,GACZ,OAAO,2BAAKA,GAAZ,IAAuBxB,SAAUsB,S,EAKvCG,cAAgB,SAAA7C,GACd,EAAKJ,UAAS,SAAAgD,GAAS,MAAK,CAC1BxB,SAAUwB,EAAUxB,SAASE,QAAO,SAAAiB,GAAO,OAAIA,EAAQvC,KAAOA,U,EAIlE8C,aAAe,SAAArD,GAAU,IAAD,EACEA,EAAMC,cAAtBJ,EADc,EACdA,KAAMK,EADQ,EACRA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,wDAG1B,SAAmBoD,EAAWH,GACxBjC,KAAKtB,MAAM+B,WAAawB,EAAUxB,UACpC4B,aAAaC,QAAQ,WAAYC,KAAKC,UAAUxC,KAAKtB,MAAM+B,a,+BAI/D,WACE,GAAI4B,aAAaI,QAAQ,YAAa,CACpC,IAAMhC,EAAW4B,aAAaI,QAAQ,YAChCC,EAAiBH,KAAKI,MAAMlC,GAClCT,KAAKf,SAAS,CAAEwB,SAAUiC,SAE1BL,aAAaC,QAAQ,WAAYC,KAAKC,UAAUxC,KAAKtB,MAAM+B,a,oBAI/D,WACE,OACE,gCACE,2CACA,cAAC,EAAD,CAAad,SAAUK,KAAK6B,aAE5B,0CACA,cAAC,EAAD,CACEP,cAAetB,KAAKmC,aACpBZ,WAAYvB,KAAKtB,MAAMiC,SAGzB,cAAC,EAAD,CACEF,SAAUT,KAAKtB,MAAM+B,SACrBC,cAAeV,KAAKkC,cACpBvB,OAAQX,KAAKtB,MAAMiC,gB,GAzEXJ,a,MCDlBqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BzE,EAAOC,QAAU,CAAC,YAAc,iCAAiC,gBAAkB,qCAAqC,YAAc,iCAAiC,aAAe,qC","file":"static/js/main.31121efa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2bqcg\",\"formLabel\":\"Filter_formLabel__2hPwS\",\"inputForm\":\"Filter_inputForm__1oFbl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__bQAwL\",\"formContainer\":\"ContactForm_formContainer__1TE5u\",\"formLabel\":\"ContactForm_formLabel__1_a_w\",\"inputForm\":\"ContactForm_inputForm__3teMb\",\"formBtn\":\"ContactForm_formBtn__kELd6\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  getContactData = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const contactId = shortid.generate();\n    const newContact = { id: contactId, name, number };\n\n    console.log(newContact.name);\n\n    this.props.onSubmit(newContact);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <form onSubmit={this.handleSubmit} className={styles.formContainer}>\n          <label className={styles.formLabel}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.getContactData}\n              className={styles.inputForm}\n            ></input>\n          </label>\n          <label className={styles.formLabel}>\n            Phone number\n            <input\n              type=\"text\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.getContactData}\n              className={styles.inputForm}\n            ></input>\n          </label>\n          <button className={styles.formBtn}>Add to contact list</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport styles from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, removeContact, filter }) => {\n  return (\n    <>\n      <ul className={styles.contactList}>\n        {contacts\n          .filter(contactItem =>\n            contactItem.name.toLowerCase().includes(filter.toLowerCase()),\n          )\n          .map(({ id, name, number }) => (\n            <li key={id} className={styles.contactListItem}>\n              <p className={styles.contactData}>\n                {name}: {number}\n              </p>\n              <button\n                onClick={() => removeContact(id)}\n                className={styles.removeButton}\n              >\n                X\n              </button>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  removeContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filterHandler, inputValue }) => {\n  return (\n    <div className={styles.filterContainer}>\n      <label className={styles.formLabel}>\n        Contact search\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={inputValue}\n          onChange={filterHandler}\n          className={styles.inputForm}\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filterHandler: PropTypes.func.isRequired,\n  inputValue: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import baseCss from './base.module.css';\n\nimport React, { Component } from 'react';\nimport ContactForm from './Components/ContactFrom/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  checkContactName = name => {\n    return this.state.contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  addContact = newContact => {\n    const { contacts } = this.state;\n\n    if (this.checkContactName(newContact.name)) {\n      alert('Such contact already exist');\n      return;\n    } else {\n      const newContactData = contacts.concat(newContact);\n      this.setState(prevState => {\n        return { ...prevState, contacts: newContactData };\n      });\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  filterByName = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('contacts')) {\n      const contacts = localStorage.getItem('contacts');\n      const parsedContacts = JSON.parse(contacts);\n      this.setState({ contacts: parsedContacts });\n    } else {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter\n          filterHandler={this.filterByName}\n          inputValue={this.state.filter}\n        />\n\n        <ContactList\n          contacts={this.state.contacts}\n          removeContact={this.deleteContact}\n          filter={this.state.filter}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__12Tes\",\"contactListItem\":\"ContactList_contactListItem__1ilXN\",\"contactData\":\"ContactList_contactData__2JdBC\",\"removeButton\":\"ContactList_removeButton__1icCc\"};"],"sourceRoot":""}